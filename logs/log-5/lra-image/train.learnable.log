GPU list: [0, 1, 2, 3]
[
    {
        "learn_pos_emb": true,
        "tied_weights": false,
        "embedding_dim": 64,
        "transformer_dim": 64,
        "transformer_hidden_dim": 128,
        "head_dim": 32,
        "num_head": 2,
        "num_layers": 2,
        "vocab_size": 256,
        "max_seq_len": 1024,
        "dropout_prob": 0.1,
        "attention_dropout": 0.1,
        "pooling_mode": "MEAN",
        "num_classes": 10,
        "block_size": 32,
        "batch_size": 128,
        "density": 0.05,
        "mixed_precision": true,
        "random_seed": 5,
        "task": "lra-image"
    },
    {
        "batch_size": 512,
        "learning_rate": 0.002,
        "warmup": 175,
        "lr_decay": "linear",
        "weight_decay": 0,
        "eval_frequency": 500,
        "num_train_steps": 10000,
        "num_init_steps": 0,
        "num_eval_steps": 20,
        "num_dense_train_steps": 1000,
        "attn_loss_scale": 0.01
    }
]
attn compile
attn compile
DataParallel(
  (module): ModelForSC(
    (model): Model(
      (embeddings): Embeddings(
        (word_embeddings): Embedding(256, 64)
        (position_embeddings): Embedding(1024, 64)
        (dropout): Dropout(p=0.1, inplace=False)
      )
      (transformer_0): TransformerLayer(
        (norm1): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
        (mha): Attention(
          (W_q): Linear(in_features=64, out_features=64, bias=True)
          (W_k): Linear(in_features=64, out_features=64, bias=True)
          (W_v): Linear(in_features=64, out_features=64, bias=True)
          (avg_pool): AvgPool2d(kernel_size=32, stride=32, padding=0)
          (MSEloss): MSELoss()
          (attn): CUDAAttention()
          (ff): Linear(in_features=64, out_features=64, bias=True)
        )
        (dropout1): Dropout(p=0.1, inplace=False)
        (norm2): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
        (mlpblock): Sequential(
          (0): Linear(in_features=64, out_features=128, bias=True)
          (1): GELU(approximate='none')
          (2): Dropout(p=0.1, inplace=False)
          (3): Linear(in_features=128, out_features=64, bias=True)
          (4): Dropout(p=0.1, inplace=False)
        )
      )
      (transformer_1): TransformerLayer(
        (norm1): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
        (mha): Attention(
          (W_q): Linear(in_features=64, out_features=64, bias=True)
          (W_k): Linear(in_features=64, out_features=64, bias=True)
          (W_v): Linear(in_features=64, out_features=64, bias=True)
          (avg_pool): AvgPool2d(kernel_size=32, stride=32, padding=0)
          (MSEloss): MSELoss()
          (attn): CUDAAttention()
          (ff): Linear(in_features=64, out_features=64, bias=True)
        )
        (dropout1): Dropout(p=0.1, inplace=False)
        (norm2): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
        (mlpblock): Sequential(
          (0): Linear(in_features=64, out_features=128, bias=True)
          (1): GELU(approximate='none')
          (2): Dropout(p=0.1, inplace=False)
          (3): Linear(in_features=128, out_features=64, bias=True)
          (4): Dropout(p=0.1, inplace=False)
        )
      )
      (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
    )
    (seq_classifer): SCHead(
      (mlpblock): Sequential(
        (0): Linear(in_features=64, out_features=128, bias=True)
        (1): ReLU()
        (2): Linear(in_features=128, out_features=10, bias=True)
      )
    )
  )
)
parameter_size: [torch.Size([256, 64]), torch.Size([1024, 64]), torch.Size([64]), torch.Size([64]), torch.Size([32, 32]), torch.Size([64, 64]), torch.Size([64]), torch.Size([64, 64]), torch.Size([64]), torch.Size([64, 64]), torch.Size([64]), torch.Size([64, 64]), torch.Size([64]), torch.Size([64]), torch.Size([64]), torch.Size([128, 64]), torch.Size([128]), torch.Size([64, 128]), torch.Size([64]), torch.Size([64]), torch.Size([64]), torch.Size([32, 32]), torch.Size([64, 64]), torch.Size([64]), torch.Size([64, 64]), torch.Size([64]), torch.Size([64, 64]), torch.Size([64]), torch.Size([64, 64]), torch.Size([64]), torch.Size([64]), torch.Size([64]), torch.Size([128, 64]), torch.Size([128]), torch.Size([64, 128]), torch.Size([64]), torch.Size([64]), torch.Size([64]), torch.Size([128, 64]), torch.Size([128]), torch.Size([10, 128]), torch.Size([10])]
num_parameter: 160650
Loaded ../Skyformer/data/lra_processed/lra-image.train.pickle... size=45000
Loaded ../Skyformer/data/lra_processed/lra-image.dev.pickle... size=5000
Loaded ../Skyformer/data/lra_processed/lra-image.test.pickle... size=10000
accumu_steps=1
module.model.transformer_0.mha.pattern saved
module.model.transformer_1.mha.pattern saved
./pickle/lra-image/module.model.transformer_0.mha.pattern.pickle
tensor([ 627,  594,  561,  528,  396,  957,  297,  462,  495,  825,  264, 1023,
           0,  924,  198,  330,  132,  231,  401,  556,  338,  586,  990,  660,
         402,  588,  792,  429,  891,   99,  858,   33,  759,  363,  605,  946,
         209,  550,  306,  585,  563,  625,  693,  467,  622,  562,  593,   66,
         595,  626,  465], device='cuda:0')
tensor(51, device='cuda:0')
block_attn compile
./pickle/lra-image/module.model.transformer_1.mha.pattern.pickle
tensor([ 429,  132,  561,    0,  495,  594,   99,   66,  627,  825,  165,  660,
         528,  297,  330,  396,  891,  759,   13,  416, 1023,  462,  726,  957,
          81,  546,  563,  625,    4,  128,  990,  924,   33,  143,  484,  363,
         231,  133,  164,  432,  525,  109,  419,  858,  434,  589,   77,  418,
         144,  516,  430], device='cuda:0')
tensor(51, device='cuda:0')
block_attn compile
total pattern searching time (s): 0.005568504333496094
[]
best model saved: step =  499 dev accu =  tensor(0.3729, device='cuda:0')

Validation Results
Global Steps: 499
Valid Loss: 1.73492
Valid Accuracy: 0.37285
time stamp: 106.44142436981201
[]
best model saved: step =  999 dev accu =  tensor(0.4044, device='cuda:0')

Validation Results
Global Steps: 999
Valid Loss: 1.67601
Valid Accuracy: 0.40439
time stamp: 142.0341980457306
[]
best model saved: step =  1499 dev accu =  tensor(0.4216, device='cuda:0')

Validation Results
Global Steps: 1499
Valid Loss: 1.64951
Valid Accuracy: 0.42158
time stamp: 177.50026202201843
[]

Validation Results
Global Steps: 1999
Valid Loss: 1.73643
Valid Accuracy: 0.40967
time stamp: 213.11487364768982
[]

Validation Results
Global Steps: 2499
Valid Loss: 1.76295
Valid Accuracy: 0.41152
time stamp: 249.1465232372284
[]

Validation Results
Global Steps: 2999
Valid Loss: 1.78590
Valid Accuracy: 0.41104
time stamp: 284.887597322464
[]

Validation Results
Global Steps: 3499
Valid Loss: 1.78510
Valid Accuracy: 0.41973
time stamp: 320.8480944633484
[]

Validation Results
Global Steps: 3999
Valid Loss: 1.84396
Valid Accuracy: 0.41494
time stamp: 356.58284091949463
[]

Validation Results
Global Steps: 4499
Valid Loss: 1.89471
Valid Accuracy: 0.41094
time stamp: 392.2432441711426
[]

Validation Results
Global Steps: 4999
Valid Loss: 1.98637
Valid Accuracy: 0.40752
time stamp: 428.01865911483765
[]

Validation Results
Global Steps: 5499
Valid Loss: 1.93211
Valid Accuracy: 0.41367
time stamp: 463.88392663002014
[]
best model saved: step =  5999 dev accu =  tensor(0.4277, device='cuda:0')

Validation Results
Global Steps: 5999
Valid Loss: 1.93170
Valid Accuracy: 0.42773
time stamp: 499.3453016281128
[]

Validation Results
Global Steps: 6499
Valid Loss: 2.03825
Valid Accuracy: 0.40332
time stamp: 535.3214597702026
[]

Validation Results
Global Steps: 6999
Valid Loss: 2.04444
Valid Accuracy: 0.40625
time stamp: 571.2627565860748
[]

Validation Results
Global Steps: 7499
Valid Loss: 2.12269
Valid Accuracy: 0.40420
time stamp: 607.3275077342987
[]

Validation Results
Global Steps: 7999
Valid Loss: 2.10341
Valid Accuracy: 0.40469
time stamp: 642.9313614368439
[]

Validation Results
Global Steps: 8499
Valid Loss: 2.16327
Valid Accuracy: 0.40146
time stamp: 678.6705105304718
[]

Validation Results
Global Steps: 8999
Valid Loss: 2.14484
Valid Accuracy: 0.40664
time stamp: 714.1698701381683
[]

Validation Results
Global Steps: 9499
Valid Loss: 2.25725
Valid Accuracy: 0.39912
time stamp: 749.6355390548706
[]

Validation Results
Global Steps: 9999
Valid Loss: 2.30456
Valid Accuracy: 0.39873
time stamp: 785.4599816799164
total training step (k): 10.0
total training time (s): 785.460390329361
total training time (ms): 13019.073852539062
peak memory usage (MB): 8036
allocated memory usage (MB): 49679278
|===========================================================================|
|                  PyTorch CUDA memory summary, device ID 0                 |
|---------------------------------------------------------------------------|
|            CUDA OOMs: 0            |        cudaMalloc retries: 0         |
|===========================================================================|
|        Metric         | Cur Usage  | Peak Usage | Tot Alloc  | Tot Freed  |
|---------------------------------------------------------------------------|
| Allocated memory      |    9993 KB |    8036 MB |   48514 GB |   48514 GB |
|       from large pool |    6144 KB |    8030 MB |   48149 GB |   48149 GB |
|       from small pool |    3849 KB |      15 MB |     365 GB |     365 GB |
|---------------------------------------------------------------------------|
| Active memory         |    9993 KB |    8036 MB |   48514 GB |   48514 GB |
|       from large pool |    6144 KB |    8030 MB |   48149 GB |   48149 GB |
|       from small pool |    3849 KB |      15 MB |     365 GB |     365 GB |
|---------------------------------------------------------------------------|
| GPU reserved memory   |    8612 MB |    8612 MB |    8612 MB |       0 B  |
|       from large pool |    8596 MB |    8596 MB |    8596 MB |       0 B  |
|       from small pool |      16 MB |      16 MB |      16 MB |       0 B  |
|---------------------------------------------------------------------------|
| Non-releasable memory |   10487 KB |    1109 MB |   40735 GB |   40735 GB |
|       from large pool |   10240 KB |    1106 MB |   40283 GB |   40283 GB |
|       from small pool |     247 KB |       4 MB |     451 GB |     451 GB |
|---------------------------------------------------------------------------|
| Allocations           |     228    |     304    |    5153 K  |    5153 K  |
|       from large pool |       2    |      49    |    1786 K  |    1786 K  |
|       from small pool |     226    |     285    |    3367 K  |    3366 K  |
|---------------------------------------------------------------------------|
| Active allocs         |     228    |     304    |    5153 K  |    5153 K  |
|       from large pool |       2    |      49    |    1786 K  |    1786 K  |
|       from small pool |     226    |     285    |    3367 K  |    3366 K  |
|---------------------------------------------------------------------------|
| GPU reserved segments |      30    |      30    |      30    |       0    |
|       from large pool |      22    |      22    |      22    |       0    |
|       from small pool |       8    |       8    |       8    |       0    |
|---------------------------------------------------------------------------|
| Non-releasable allocs |      12    |      23    |    2632 K  |    2632 K  |
|       from large pool |       2    |      15    |     661 K  |     661 K  |
|       from small pool |      10    |      15    |    1971 K  |    1971 K  |
|---------------------------------------------------------------------------|
| Oversize allocations  |       0    |       0    |       0    |       0    |
|---------------------------------------------------------------------------|
| Oversize GPU segments |       0    |       0    |       0    |       0    |
|===========================================================================|

loading the best model from: ./checkpoints/checkpoints-5/lra-image/learnable.model
Evaluation Results
Loss: 1.89766
Accuracy: 0.43370
