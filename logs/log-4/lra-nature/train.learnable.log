GPU list: [0, 1, 2, 3]
[
    {
        "learn_pos_emb": true,
        "tied_weights": false,
        "embedding_dim": 64,
        "transformer_dim": 64,
        "transformer_hidden_dim": 128,
        "head_dim": 32,
        "num_head": 2,
        "num_layers": 2,
        "vocab_size": 512,
        "max_seq_len": 1024,
        "dropout_prob": 0.1,
        "attention_dropout": 0.1,
        "pooling_mode": "MEAN",
        "num_classes": 14,
        "block_size": 32,
        "batch_size": 128,
        "density": 0.04,
        "mixed_precision": true,
        "random_seed": 4,
        "task": "lra-nature"
    },
    {
        "batch_size": 512,
        "learning_rate": 0.003,
        "warmup": 800,
        "lr_decay": "linear",
        "weight_decay": 0,
        "eval_frequency": 500,
        "num_train_steps": 10000,
        "num_init_steps": 3000,
        "num_eval_steps": 300,
        "num_dense_train_steps": 1000,
        "patience": 10,
        "attn_loss_scale": 0.01
    }
]
attn compile
attn compile
DataParallel(
  (module): ModelForSC(
    (model): Model(
      (embeddings): Embeddings(
        (word_embeddings): Embedding(512, 64)
        (position_embeddings): Embedding(1024, 64)
        (dropout): Dropout(p=0.1, inplace=False)
      )
      (transformer_0): TransformerLayer(
        (norm1): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
        (mha): Attention(
          (W_q): Linear(in_features=64, out_features=64, bias=True)
          (W_k): Linear(in_features=64, out_features=64, bias=True)
          (W_v): Linear(in_features=64, out_features=64, bias=True)
          (avg_pool): AvgPool2d(kernel_size=32, stride=32, padding=0)
          (MSEloss): MSELoss()
          (attn): CUDAAttention()
          (ff): Linear(in_features=64, out_features=64, bias=True)
        )
        (dropout1): Dropout(p=0.1, inplace=False)
        (norm2): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
        (mlpblock): Sequential(
          (0): Linear(in_features=64, out_features=128, bias=True)
          (1): GELU(approximate='none')
          (2): Dropout(p=0.1, inplace=False)
          (3): Linear(in_features=128, out_features=64, bias=True)
          (4): Dropout(p=0.1, inplace=False)
        )
      )
      (transformer_1): TransformerLayer(
        (norm1): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
        (mha): Attention(
          (W_q): Linear(in_features=64, out_features=64, bias=True)
          (W_k): Linear(in_features=64, out_features=64, bias=True)
          (W_v): Linear(in_features=64, out_features=64, bias=True)
          (avg_pool): AvgPool2d(kernel_size=32, stride=32, padding=0)
          (MSEloss): MSELoss()
          (attn): CUDAAttention()
          (ff): Linear(in_features=64, out_features=64, bias=True)
        )
        (dropout1): Dropout(p=0.1, inplace=False)
        (norm2): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
        (mlpblock): Sequential(
          (0): Linear(in_features=64, out_features=128, bias=True)
          (1): GELU(approximate='none')
          (2): Dropout(p=0.1, inplace=False)
          (3): Linear(in_features=128, out_features=64, bias=True)
          (4): Dropout(p=0.1, inplace=False)
        )
      )
      (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
    )
    (seq_classifer): SCHead(
      (mlpblock): Sequential(
        (0): Linear(in_features=64, out_features=128, bias=True)
        (1): ReLU()
        (2): Linear(in_features=128, out_features=14, bias=True)
      )
    )
  )
)
parameter_size: [torch.Size([512, 64]), torch.Size([1024, 64]), torch.Size([64]), torch.Size([64]), torch.Size([32, 32]), torch.Size([64, 64]), torch.Size([64]), torch.Size([64, 64]), torch.Size([64]), torch.Size([64, 64]), torch.Size([64]), torch.Size([64, 64]), torch.Size([64]), torch.Size([64]), torch.Size([64]), torch.Size([128, 64]), torch.Size([128]), torch.Size([64, 128]), torch.Size([64]), torch.Size([64]), torch.Size([64]), torch.Size([32, 32]), torch.Size([64, 64]), torch.Size([64]), torch.Size([64, 64]), torch.Size([64]), torch.Size([64, 64]), torch.Size([64]), torch.Size([64, 64]), torch.Size([64]), torch.Size([64]), torch.Size([64]), torch.Size([128, 64]), torch.Size([128]), torch.Size([64, 128]), torch.Size([64]), torch.Size([64]), torch.Size([64]), torch.Size([128, 64]), torch.Size([128]), torch.Size([14, 128]), torch.Size([14])]
num_parameter: 177550
Loaded ../Skyformer/data/lra_processed/lra-nature.train.pickle... size=437513
Loaded ../Skyformer/data/lra_processed/lra-nature.dev.pickle... size=24426
Loaded ../Skyformer/data/lra_processed/lra-nature.test.pickle... size=24426
accumu_steps=1
module.model.transformer_0.mha.pattern saved
module.model.transformer_1.mha.pattern saved
./pickle/lra-nature/module.model.transformer_0.mha.pattern.pickle
tensor([1023,  660,  165,  396,  825,  429,  528,    0,  231,  726,  990,  495,
         858,  957,  792,  132,  297,  191,  997,  561,   33,   99,  924,  308,
         649,   12,  384,  759,  167,  229,  173,  421,   20,  640,  363,  176,
         517,  447, 1005,  175], device='cuda:0')
tensor(40, device='cuda:0')
block_attn compile
./pickle/lra-nature/module.model.transformer_1.mha.pattern.pickle
tensor([1023,  231,  627,  396,  330,  792,  594,  165,  693,   99,  858,  825,
         924,  528,  429,  264,  891,   33,  132,  957,  759,  990,   66,  660,
         363,  629,  691,  927, 1020,  190,  965,  863, 1018,  639, 1011,  184,
         773,  794,  856,  799], device='cuda:0')
tensor(40, device='cuda:0')
block_attn compile
total pattern searching time (s): 0.005391597747802734
[]
best model saved: step =  499 dev accu =  tensor(0.4186, device='cuda:0')

Validation Results
Global Steps: 499
Valid Loss: 1.73644
Valid Accuracy: 0.41860
time stamp: 133.459979057312
[]

Validation Results
Global Steps: 999
Valid Loss: 1.80967
Valid Accuracy: 0.38210
time stamp: 174.4552674293518
[]
best model saved: step =  1499 dev accu =  tensor(0.4369, device='cuda:0')

Validation Results
Global Steps: 1499
Valid Loss: 1.72339
Valid Accuracy: 0.43688
time stamp: 215.65357375144958
[]
best model saved: step =  1999 dev accu =  tensor(0.4626, device='cuda:0')

Validation Results
Global Steps: 1999
Valid Loss: 1.67744
Valid Accuracy: 0.46260
time stamp: 256.95352029800415
[]

Validation Results
Global Steps: 2499
Valid Loss: 1.70876
Valid Accuracy: 0.43428
time stamp: 297.3849790096283
[]
best model saved: step =  2999 dev accu =  tensor(0.4637, device='cuda:0')

Validation Results
Global Steps: 2999
Valid Loss: 1.63505
Valid Accuracy: 0.46374
time stamp: 338.19211053848267
[]

Validation Results
Global Steps: 3499
Valid Loss: 1.72063
Valid Accuracy: 0.42490
time stamp: 379.1721510887146
[]

Validation Results
Global Steps: 3999
Valid Loss: 1.69828
Valid Accuracy: 0.43708
time stamp: 420.2528417110443
[]

Validation Results
Global Steps: 4499
Valid Loss: 1.66971
Valid Accuracy: 0.44548
time stamp: 461.1093912124634
[]
best model saved: step =  4999 dev accu =  tensor(0.4850, device='cuda:0')

Validation Results
Global Steps: 4999
Valid Loss: 1.60005
Valid Accuracy: 0.48497
time stamp: 502.03685784339905
[]

Validation Results
Global Steps: 5499
Valid Loss: 1.59642
Valid Accuracy: 0.47475
time stamp: 543.273332118988
[]

Validation Results
Global Steps: 5999
Valid Loss: 1.68249
Valid Accuracy: 0.44321
time stamp: 584.8088297843933
[]
best model saved: step =  6499 dev accu =  tensor(0.4891, device='cuda:0')

Validation Results
Global Steps: 6499
Valid Loss: 1.58913
Valid Accuracy: 0.48909
time stamp: 625.7632162570953
[]

Validation Results
Global Steps: 6999
Valid Loss: 1.61574
Valid Accuracy: 0.46994
time stamp: 667.0403347015381
[]

Validation Results
Global Steps: 7499
Valid Loss: 1.62790
Valid Accuracy: 0.46850
time stamp: 708.1143636703491
[]

Validation Results
Global Steps: 7999
Valid Loss: 1.59520
Valid Accuracy: 0.48302
time stamp: 749.1671793460846
[]
best model saved: step =  8499 dev accu =  tensor(0.5019, device='cuda:0')

Validation Results
Global Steps: 8499
Valid Loss: 1.55854
Valid Accuracy: 0.50192
time stamp: 790.1688153743744
[]

Validation Results
Global Steps: 8999
Valid Loss: 1.58569
Valid Accuracy: 0.48551
time stamp: 831.4557065963745
[]

Validation Results
Global Steps: 9499
Valid Loss: 1.56870
Valid Accuracy: 0.49885
time stamp: 872.6010811328888
[]

Validation Results
Global Steps: 9999
Valid Loss: 1.57099
Valid Accuracy: 0.49421
time stamp: 913.3400042057037
total training step (k): 10.0
total training time (s): 913.3411908149719
total training time (ms): 173550.0478515625
peak memory usage (MB): 8036
allocated memory usage (MB): 58948697
|===========================================================================|
|                  PyTorch CUDA memory summary, device ID 0                 |
|---------------------------------------------------------------------------|
|            CUDA OOMs: 0            |        cudaMalloc retries: 0         |
|===========================================================================|
|        Metric         | Cur Usage  | Peak Usage | Tot Alloc  | Tot Freed  |
|---------------------------------------------------------------------------|
| Allocated memory      |   10389 KB |    8036 MB |   57567 GB |   57567 GB |
|       from large pool |    6144 KB |    8030 MB |   57078 GB |   57078 GB |
|       from small pool |    4245 KB |      15 MB |     488 GB |     488 GB |
|---------------------------------------------------------------------------|
| Active memory         |   10389 KB |    8036 MB |   57567 GB |   57567 GB |
|       from large pool |    6144 KB |    8030 MB |   57078 GB |   57078 GB |
|       from small pool |    4245 KB |      15 MB |     488 GB |     488 GB |
|---------------------------------------------------------------------------|
| GPU reserved memory   |    8614 MB |    8614 MB |    8614 MB |       0 B  |
|       from large pool |    8596 MB |    8596 MB |    8596 MB |       0 B  |
|       from small pool |      18 MB |      18 MB |      18 MB |       0 B  |
|---------------------------------------------------------------------------|
| Non-releasable memory |   12139 KB |    1109 MB |   52541 GB |   52541 GB |
|       from large pool |   10240 KB |    1106 MB |   52017 GB |   52017 GB |
|       from small pool |    1899 KB |       4 MB |     524 GB |     524 GB |
|---------------------------------------------------------------------------|
| Allocations           |     228    |     574    |    6178 K  |    6178 K  |
|       from large pool |       2    |      49    |    2145 K  |    2145 K  |
|       from small pool |     226    |     565    |    4033 K  |    4033 K  |
|---------------------------------------------------------------------------|
| Active allocs         |     228    |     574    |    6178 K  |    6178 K  |
|       from large pool |       2    |      49    |    2145 K  |    2145 K  |
|       from small pool |     226    |     565    |    4033 K  |    4033 K  |
|---------------------------------------------------------------------------|
| GPU reserved segments |      31    |      31    |      31    |       0    |
|       from large pool |      22    |      22    |      22    |       0    |
|       from small pool |       9    |       9    |       9    |       0    |
|---------------------------------------------------------------------------|
| Non-releasable allocs |      13    |      25    |    2896 K  |    2896 K  |
|       from large pool |       2    |      15    |     868 K  |     868 K  |
|       from small pool |      11    |      16    |    2027 K  |    2027 K  |
|---------------------------------------------------------------------------|
| Oversize allocations  |       0    |       0    |       0    |       0    |
|---------------------------------------------------------------------------|
| Oversize GPU segments |       0    |       0    |       0    |       0    |
|===========================================================================|

loading the best model from: ./checkpoints/checkpoints-4/lra-nature/learnable.model
Evaluation Results
Loss: 1.55924
Accuracy: 0.50187
