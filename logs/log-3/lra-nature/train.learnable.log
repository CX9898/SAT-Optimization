GPU list: [0, 1, 2, 3]
[
    {
        "learn_pos_emb": true,
        "tied_weights": false,
        "embedding_dim": 64,
        "transformer_dim": 64,
        "transformer_hidden_dim": 128,
        "head_dim": 32,
        "num_head": 2,
        "num_layers": 2,
        "vocab_size": 512,
        "max_seq_len": 1024,
        "dropout_prob": 0.1,
        "attention_dropout": 0.1,
        "pooling_mode": "MEAN",
        "num_classes": 14,
        "block_size": 32,
        "batch_size": 128,
        "density": 0.04,
        "mixed_precision": true,
        "random_seed": 3,
        "task": "lra-nature"
    },
    {
        "batch_size": 512,
        "learning_rate": 0.003,
        "warmup": 800,
        "lr_decay": "linear",
        "weight_decay": 0,
        "eval_frequency": 500,
        "num_train_steps": 10000,
        "num_init_steps": 3000,
        "num_eval_steps": 300,
        "num_dense_train_steps": 1000,
        "patience": 10,
        "attn_loss_scale": 0.01
    }
]
attn compile
attn compile
DataParallel(
  (module): ModelForSC(
    (model): Model(
      (embeddings): Embeddings(
        (word_embeddings): Embedding(512, 64)
        (position_embeddings): Embedding(1024, 64)
        (dropout): Dropout(p=0.1, inplace=False)
      )
      (transformer_0): TransformerLayer(
        (norm1): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
        (mha): Attention(
          (W_q): Linear(in_features=64, out_features=64, bias=True)
          (W_k): Linear(in_features=64, out_features=64, bias=True)
          (W_v): Linear(in_features=64, out_features=64, bias=True)
          (avg_pool): AvgPool2d(kernel_size=32, stride=32, padding=0)
          (MSEloss): MSELoss()
          (attn): CUDAAttention()
          (ff): Linear(in_features=64, out_features=64, bias=True)
        )
        (dropout1): Dropout(p=0.1, inplace=False)
        (norm2): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
        (mlpblock): Sequential(
          (0): Linear(in_features=64, out_features=128, bias=True)
          (1): GELU(approximate='none')
          (2): Dropout(p=0.1, inplace=False)
          (3): Linear(in_features=128, out_features=64, bias=True)
          (4): Dropout(p=0.1, inplace=False)
        )
      )
      (transformer_1): TransformerLayer(
        (norm1): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
        (mha): Attention(
          (W_q): Linear(in_features=64, out_features=64, bias=True)
          (W_k): Linear(in_features=64, out_features=64, bias=True)
          (W_v): Linear(in_features=64, out_features=64, bias=True)
          (avg_pool): AvgPool2d(kernel_size=32, stride=32, padding=0)
          (MSEloss): MSELoss()
          (attn): CUDAAttention()
          (ff): Linear(in_features=64, out_features=64, bias=True)
        )
        (dropout1): Dropout(p=0.1, inplace=False)
        (norm2): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
        (mlpblock): Sequential(
          (0): Linear(in_features=64, out_features=128, bias=True)
          (1): GELU(approximate='none')
          (2): Dropout(p=0.1, inplace=False)
          (3): Linear(in_features=128, out_features=64, bias=True)
          (4): Dropout(p=0.1, inplace=False)
        )
      )
      (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
    )
    (seq_classifer): SCHead(
      (mlpblock): Sequential(
        (0): Linear(in_features=64, out_features=128, bias=True)
        (1): ReLU()
        (2): Linear(in_features=128, out_features=14, bias=True)
      )
    )
  )
)
parameter_size: [torch.Size([512, 64]), torch.Size([1024, 64]), torch.Size([64]), torch.Size([64]), torch.Size([32, 32]), torch.Size([64, 64]), torch.Size([64]), torch.Size([64, 64]), torch.Size([64]), torch.Size([64, 64]), torch.Size([64]), torch.Size([64, 64]), torch.Size([64]), torch.Size([64]), torch.Size([64]), torch.Size([128, 64]), torch.Size([128]), torch.Size([64, 128]), torch.Size([64]), torch.Size([64]), torch.Size([64]), torch.Size([32, 32]), torch.Size([64, 64]), torch.Size([64]), torch.Size([64, 64]), torch.Size([64]), torch.Size([64, 64]), torch.Size([64]), torch.Size([64, 64]), torch.Size([64]), torch.Size([64]), torch.Size([64]), torch.Size([128, 64]), torch.Size([128]), torch.Size([64, 128]), torch.Size([64]), torch.Size([64]), torch.Size([64]), torch.Size([128, 64]), torch.Size([128]), torch.Size([14, 128]), torch.Size([14])]
num_parameter: 177550
Loaded ../Skyformer/data/lra_processed/lra-nature.train.pickle... size=437513
Loaded ../Skyformer/data/lra_processed/lra-nature.dev.pickle... size=24426
Loaded ../Skyformer/data/lra_processed/lra-nature.test.pickle... size=24426
accumu_steps=1
module.model.transformer_0.mha.pattern saved
module.model.transformer_1.mha.pattern saved
./pickle/lra-nature/module.model.transformer_0.mha.pattern.pickle
tensor([198, 759, 957, 528,  99, 924, 627, 594, 231,  66, 561, 363, 858, 792,
        495, 990, 132, 165, 462, 825, 535, 752, 221, 934, 210, 582, 765, 951,
        396, 429, 536, 784,  33, 541, 944, 595, 626, 693, 958, 989],
       device='cuda:0')
tensor(40, device='cuda:0')
block_attn compile
./pickle/lra-nature/module.model.transformer_1.mha.pattern.pickle
tensor([ 825,  396,    0,  462,  495,   66,  528,  627, 1023,   99,  858,  429,
         693,  121,  803,  264,  165,  231,  363,  792,  330,  831, 1017,   25,
         800,  561,  726,   12,  384,  409,  812,  891,  403,  620,  505,  815,
         990,  249,  807,  957], device='cuda:0')
tensor(40, device='cuda:0')
block_attn compile
total pattern searching time (s): 0.005233049392700195
[]
best model saved: step =  499 dev accu =  tensor(0.4242, device='cuda:0')

Validation Results
Global Steps: 499
Valid Loss: 1.74359
Valid Accuracy: 0.42424
time stamp: 151.6303985118866
[]
best model saved: step =  999 dev accu =  tensor(0.4801, device='cuda:0')

Validation Results
Global Steps: 999
Valid Loss: 1.64808
Valid Accuracy: 0.48012
time stamp: 193.15445733070374
[]

Validation Results
Global Steps: 1499
Valid Loss: 1.64838
Valid Accuracy: 0.47242
time stamp: 234.0802619457245
[]

Validation Results
Global Steps: 1999
Valid Loss: 1.62925
Valid Accuracy: 0.47954
time stamp: 275.835688829422
[]

Validation Results
Global Steps: 2499
Valid Loss: 1.63135
Valid Accuracy: 0.47161
time stamp: 316.97627449035645
[]
best model saved: step =  2999 dev accu =  tensor(0.5007, device='cuda:0')

Validation Results
Global Steps: 2999
Valid Loss: 1.59094
Valid Accuracy: 0.50073
time stamp: 358.51034808158875
[]

Validation Results
Global Steps: 3499
Valid Loss: 1.59560
Valid Accuracy: 0.49494
time stamp: 400.0711295604706
[]

Validation Results
Global Steps: 3999
Valid Loss: 1.60264
Valid Accuracy: 0.48281
time stamp: 441.40725779533386
[]

Validation Results
Global Steps: 4499
Valid Loss: 1.55684
Valid Accuracy: 0.49980
time stamp: 483.04684615135193
[]
best model saved: step =  4999 dev accu =  tensor(0.5092, device='cuda:0')

Validation Results
Global Steps: 4999
Valid Loss: 1.56484
Valid Accuracy: 0.50921
time stamp: 524.2799265384674
[]
best model saved: step =  5499 dev accu =  tensor(0.5183, device='cuda:0')

Validation Results
Global Steps: 5499
Valid Loss: 1.53100
Valid Accuracy: 0.51827
time stamp: 565.9353759288788
[]

Validation Results
Global Steps: 5999
Valid Loss: 1.55342
Valid Accuracy: 0.51174
time stamp: 607.99289894104
[]

Validation Results
Global Steps: 6499
Valid Loss: 1.54837
Valid Accuracy: 0.51150
time stamp: 649.4416427612305
[]

Validation Results
Global Steps: 6999
Valid Loss: 1.52658
Valid Accuracy: 0.51286
time stamp: 691.3476994037628
[]
best model saved: step =  7499 dev accu =  tensor(0.5200, device='cuda:0')

Validation Results
Global Steps: 7499
Valid Loss: 1.52843
Valid Accuracy: 0.51995
time stamp: 733.0229606628418
[]
best model saved: step =  7999 dev accu =  tensor(0.5287, device='cuda:0')

Validation Results
Global Steps: 7999
Valid Loss: 1.48946
Valid Accuracy: 0.52867
time stamp: 774.9353792667389
[]

Validation Results
Global Steps: 8499
Valid Loss: 1.51693
Valid Accuracy: 0.52658
time stamp: 816.570398569107
[]

Validation Results
Global Steps: 8999
Valid Loss: 1.51191
Valid Accuracy: 0.52507
time stamp: 858.3820807933807
[]

Validation Results
Global Steps: 9499
Valid Loss: 1.50834
Valid Accuracy: 0.52171
time stamp: 900.4921762943268
[]

Validation Results
Global Steps: 9999
Valid Loss: 1.53763
Valid Accuracy: 0.52219
time stamp: 941.9590117931366
total training step (k): 10.0
total training time (s): 941.9601104259491
total training time (ms): 173770.7099609375
peak memory usage (MB): 8036
allocated memory usage (MB): 59774948
|===========================================================================|
|                  PyTorch CUDA memory summary, device ID 0                 |
|---------------------------------------------------------------------------|
|            CUDA OOMs: 0            |        cudaMalloc retries: 0         |
|===========================================================================|
|        Metric         | Cur Usage  | Peak Usage | Tot Alloc  | Tot Freed  |
|---------------------------------------------------------------------------|
| Allocated memory      |   10389 KB |    8036 MB |   58373 GB |   58373 GB |
|       from large pool |    6144 KB |    8030 MB |   57884 GB |   57884 GB |
|       from small pool |    4245 KB |      15 MB |     489 GB |     489 GB |
|---------------------------------------------------------------------------|
| Active memory         |   10389 KB |    8036 MB |   58373 GB |   58373 GB |
|       from large pool |    6144 KB |    8030 MB |   57884 GB |   57884 GB |
|       from small pool |    4245 KB |      15 MB |     489 GB |     489 GB |
|---------------------------------------------------------------------------|
| GPU reserved memory   |    8614 MB |    8614 MB |    8614 MB |       0 B  |
|       from large pool |    8596 MB |    8596 MB |    8596 MB |       0 B  |
|       from small pool |      18 MB |      18 MB |      18 MB |       0 B  |
|---------------------------------------------------------------------------|
| Non-releasable memory |   12139 KB |    1109 MB |   52471 GB |   52471 GB |
|       from large pool |   10240 KB |    1106 MB |   51946 GB |   51946 GB |
|       from small pool |    1899 KB |       4 MB |     524 GB |     524 GB |
|---------------------------------------------------------------------------|
| Allocations           |     228    |     574    |    6178 K  |    6178 K  |
|       from large pool |       2    |      49    |    2145 K  |    2145 K  |
|       from small pool |     226    |     565    |    4033 K  |    4033 K  |
|---------------------------------------------------------------------------|
| Active allocs         |     228    |     574    |    6178 K  |    6178 K  |
|       from large pool |       2    |      49    |    2145 K  |    2145 K  |
|       from small pool |     226    |     565    |    4033 K  |    4033 K  |
|---------------------------------------------------------------------------|
| GPU reserved segments |      31    |      31    |      31    |       0    |
|       from large pool |      22    |      22    |      22    |       0    |
|       from small pool |       9    |       9    |       9    |       0    |
|---------------------------------------------------------------------------|
| Non-releasable allocs |      11    |      25    |    2877 K  |    2877 K  |
|       from large pool |       2    |      15    |     868 K  |     868 K  |
|       from small pool |       9    |      16    |    2009 K  |    2009 K  |
|---------------------------------------------------------------------------|
| Oversize allocations  |       0    |       0    |       0    |       0    |
|---------------------------------------------------------------------------|
| Oversize GPU segments |       0    |       0    |       0    |       0    |
|===========================================================================|

loading the best model from: ./checkpoints/checkpoints-3/lra-nature/learnable.model
Evaluation Results
Loss: 1.48967
Accuracy: 0.52797
