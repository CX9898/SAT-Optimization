GPU list: [0, 1, 2, 3]
[
    {
        "learn_pos_emb": true,
        "tied_weights": false,
        "embedding_dim": 64,
        "transformer_dim": 64,
        "transformer_hidden_dim": 128,
        "head_dim": 32,
        "num_head": 2,
        "num_layers": 2,
        "vocab_size": 256,
        "max_seq_len": 1024,
        "dropout_prob": 0.1,
        "attention_dropout": 0.1,
        "pooling_mode": "MEAN",
        "num_classes": 10,
        "block_size": 32,
        "batch_size": 128,
        "density": 0.05,
        "mixed_precision": true,
        "random_seed": 8,
        "task": "lra-image"
    },
    {
        "batch_size": 512,
        "learning_rate": 0.002,
        "warmup": 175,
        "lr_decay": "linear",
        "weight_decay": 0,
        "eval_frequency": 500,
        "num_train_steps": 10000,
        "num_init_steps": 0,
        "num_eval_steps": 20,
        "num_dense_train_steps": 1000,
        "attn_loss_scale": 0.01
    }
]
attn compile
attn compile
DataParallel(
  (module): ModelForSC(
    (model): Model(
      (embeddings): Embeddings(
        (word_embeddings): Embedding(256, 64)
        (position_embeddings): Embedding(1024, 64)
        (dropout): Dropout(p=0.1, inplace=False)
      )
      (transformer_0): TransformerLayer(
        (norm1): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
        (mha): Attention(
          (W_q): Linear(in_features=64, out_features=64, bias=True)
          (W_k): Linear(in_features=64, out_features=64, bias=True)
          (W_v): Linear(in_features=64, out_features=64, bias=True)
          (avg_pool): AvgPool2d(kernel_size=32, stride=32, padding=0)
          (MSEloss): MSELoss()
          (attn): CUDAAttention()
          (ff): Linear(in_features=64, out_features=64, bias=True)
        )
        (dropout1): Dropout(p=0.1, inplace=False)
        (norm2): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
        (mlpblock): Sequential(
          (0): Linear(in_features=64, out_features=128, bias=True)
          (1): GELU(approximate='none')
          (2): Dropout(p=0.1, inplace=False)
          (3): Linear(in_features=128, out_features=64, bias=True)
          (4): Dropout(p=0.1, inplace=False)
        )
      )
      (transformer_1): TransformerLayer(
        (norm1): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
        (mha): Attention(
          (W_q): Linear(in_features=64, out_features=64, bias=True)
          (W_k): Linear(in_features=64, out_features=64, bias=True)
          (W_v): Linear(in_features=64, out_features=64, bias=True)
          (avg_pool): AvgPool2d(kernel_size=32, stride=32, padding=0)
          (MSEloss): MSELoss()
          (attn): CUDAAttention()
          (ff): Linear(in_features=64, out_features=64, bias=True)
        )
        (dropout1): Dropout(p=0.1, inplace=False)
        (norm2): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
        (mlpblock): Sequential(
          (0): Linear(in_features=64, out_features=128, bias=True)
          (1): GELU(approximate='none')
          (2): Dropout(p=0.1, inplace=False)
          (3): Linear(in_features=128, out_features=64, bias=True)
          (4): Dropout(p=0.1, inplace=False)
        )
      )
      (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
    )
    (seq_classifer): SCHead(
      (mlpblock): Sequential(
        (0): Linear(in_features=64, out_features=128, bias=True)
        (1): ReLU()
        (2): Linear(in_features=128, out_features=10, bias=True)
      )
    )
  )
)
parameter_size: [torch.Size([256, 64]), torch.Size([1024, 64]), torch.Size([64]), torch.Size([64]), torch.Size([32, 32]), torch.Size([64, 64]), torch.Size([64]), torch.Size([64, 64]), torch.Size([64]), torch.Size([64, 64]), torch.Size([64]), torch.Size([64, 64]), torch.Size([64]), torch.Size([64]), torch.Size([64]), torch.Size([128, 64]), torch.Size([128]), torch.Size([64, 128]), torch.Size([64]), torch.Size([64]), torch.Size([64]), torch.Size([32, 32]), torch.Size([64, 64]), torch.Size([64]), torch.Size([64, 64]), torch.Size([64]), torch.Size([64, 64]), torch.Size([64]), torch.Size([64, 64]), torch.Size([64]), torch.Size([64]), torch.Size([64]), torch.Size([128, 64]), torch.Size([128]), torch.Size([64, 128]), torch.Size([64]), torch.Size([64]), torch.Size([64]), torch.Size([128, 64]), torch.Size([128]), torch.Size([10, 128]), torch.Size([10])]
num_parameter: 160650
Loaded ../Skyformer/data/lra_processed/lra-image.train.pickle... size=45000
Loaded ../Skyformer/data/lra_processed/lra-image.dev.pickle... size=5000
Loaded ../Skyformer/data/lra_processed/lra-image.test.pickle... size=10000
accumu_steps=1
module.model.transformer_0.mha.pattern saved
module.model.transformer_1.mha.pattern saved
./pickle/lra-image/module.model.transformer_0.mha.pattern.pickle
tensor([1023,   33,  990,  561,  495,  231,  660,    0,  693,  594,  825,  429,
          63,  993,  726,  297,  528,  991, 1022,  575, 1009,  792,  330,  891,
         858,   49,  545,  830,  985,  264,  132,  165,   62,  961,   47,  481,
          31,  992,   66,  462,  957,  198,  831, 1017,  363,   46,  449,   99,
         396,   25,  800], device='cuda:0')
tensor(51, device='cuda:0')
block_attn compile
./pickle/lra-image/module.model.transformer_1.mha.pattern.pickle
tensor([ 693,  891, 1023,  561,  759,  165,  792,    0,  297,  198,  858,  825,
         231,  495,  462,  330,  990,  132,  924,  429,  660,  627,  763,  887,
         957,  594,  895, 1019,  699,  885,  528,  363,  703, 1013,   33,  533,
         688,  469,  686,  597,  690,  695,  757,  726,  603,  882,   99,  177,
         549,  396,  569], device='cuda:0')
tensor(51, device='cuda:0')
block_attn compile
total pattern searching time (s): 0.0053369998931884766
[]
best model saved: step =  499 dev accu =  tensor(0.3763, device='cuda:0')

Validation Results
Global Steps: 499
Valid Loss: 1.73023
Valid Accuracy: 0.37627
time stamp: 119.23242044448853
[]
best model saved: step =  999 dev accu =  tensor(0.4081, device='cuda:0')

Validation Results
Global Steps: 999
Valid Loss: 1.65647
Valid Accuracy: 0.40811
time stamp: 154.42878437042236
[]
best model saved: step =  1499 dev accu =  tensor(0.4172, device='cuda:0')

Validation Results
Global Steps: 1499
Valid Loss: 1.68169
Valid Accuracy: 0.41719
time stamp: 189.72980666160583
[]
best model saved: step =  1999 dev accu =  tensor(0.4308, device='cuda:0')

Validation Results
Global Steps: 1999
Valid Loss: 1.64812
Valid Accuracy: 0.43076
time stamp: 225.4919056892395
[]

Validation Results
Global Steps: 2499
Valid Loss: 1.73397
Valid Accuracy: 0.41660
time stamp: 261.2424132823944
[]

Validation Results
Global Steps: 2999
Valid Loss: 1.76407
Valid Accuracy: 0.42158
time stamp: 296.88812923431396
[]
best model saved: step =  3499 dev accu =  tensor(0.4431, device='cuda:0')

Validation Results
Global Steps: 3499
Valid Loss: 1.72348
Valid Accuracy: 0.44307
time stamp: 332.4637632369995
[]

Validation Results
Global Steps: 3999
Valid Loss: 1.82796
Valid Accuracy: 0.42227
time stamp: 367.9780271053314
[]

Validation Results
Global Steps: 4499
Valid Loss: 1.86106
Valid Accuracy: 0.42012
time stamp: 403.39191484451294
[]

Validation Results
Global Steps: 4999
Valid Loss: 1.83062
Valid Accuracy: 0.44111
time stamp: 438.913920879364
[]

Validation Results
Global Steps: 5499
Valid Loss: 1.82940
Valid Accuracy: 0.43760
time stamp: 474.1838161945343
[]

Validation Results
Global Steps: 5999
Valid Loss: 1.93788
Valid Accuracy: 0.42090
time stamp: 509.6931447982788
[]

Validation Results
Global Steps: 6499
Valid Loss: 1.95921
Valid Accuracy: 0.42832
time stamp: 545.8135504722595
[]

Validation Results
Global Steps: 6999
Valid Loss: 2.03176
Valid Accuracy: 0.42256
time stamp: 581.5540435314178
[]

Validation Results
Global Steps: 7499
Valid Loss: 1.99160
Valid Accuracy: 0.42959
time stamp: 617.1405837535858
[]

Validation Results
Global Steps: 7999
Valid Loss: 2.05556
Valid Accuracy: 0.41406
time stamp: 652.4413928985596
[]

Validation Results
Global Steps: 8499
Valid Loss: 2.05376
Valid Accuracy: 0.41973
time stamp: 688.0017514228821
[]

Validation Results
Global Steps: 8999
Valid Loss: 2.06697
Valid Accuracy: 0.43057
time stamp: 723.7257061004639
[]

Validation Results
Global Steps: 9499
Valid Loss: 2.11108
Valid Accuracy: 0.42939
time stamp: 759.5699143409729
[]

Validation Results
Global Steps: 9999
Valid Loss: 2.18871
Valid Accuracy: 0.41523
time stamp: 795.287838935852
total training step (k): 10.0
total training time (s): 795.2881989479065
total training time (ms): 12998.831726074219
peak memory usage (MB): 8036
allocated memory usage (MB): 50223947
|===========================================================================|
|                  PyTorch CUDA memory summary, device ID 0                 |
|---------------------------------------------------------------------------|
|            CUDA OOMs: 0            |        cudaMalloc retries: 0         |
|===========================================================================|
|        Metric         | Cur Usage  | Peak Usage | Tot Alloc  | Tot Freed  |
|---------------------------------------------------------------------------|
| Allocated memory      |    9993 KB |    8036 MB |   49046 GB |   49046 GB |
|       from large pool |    6144 KB |    8030 MB |   48681 GB |   48681 GB |
|       from small pool |    3849 KB |      15 MB |     365 GB |     365 GB |
|---------------------------------------------------------------------------|
| Active memory         |    9993 KB |    8036 MB |   49046 GB |   49046 GB |
|       from large pool |    6144 KB |    8030 MB |   48681 GB |   48681 GB |
|       from small pool |    3849 KB |      15 MB |     365 GB |     365 GB |
|---------------------------------------------------------------------------|
| GPU reserved memory   |    8612 MB |    8612 MB |    8612 MB |       0 B  |
|       from large pool |    8596 MB |    8596 MB |    8596 MB |       0 B  |
|       from small pool |      16 MB |      16 MB |      16 MB |       0 B  |
|---------------------------------------------------------------------------|
| Non-releasable memory |   10487 KB |    1109 MB |   40689 GB |   40689 GB |
|       from large pool |   10240 KB |    1106 MB |   40235 GB |   40235 GB |
|       from small pool |     247 KB |       4 MB |     454 GB |     454 GB |
|---------------------------------------------------------------------------|
| Allocations           |     228    |     304    |    5153 K  |    5153 K  |
|       from large pool |       2    |      49    |    1786 K  |    1786 K  |
|       from small pool |     226    |     285    |    3366 K  |    3366 K  |
|---------------------------------------------------------------------------|
| Active allocs         |     228    |     304    |    5153 K  |    5153 K  |
|       from large pool |       2    |      49    |    1786 K  |    1786 K  |
|       from small pool |     226    |     285    |    3366 K  |    3366 K  |
|---------------------------------------------------------------------------|
| GPU reserved segments |      30    |      30    |      30    |       0    |
|       from large pool |      22    |      22    |      22    |       0    |
|       from small pool |       8    |       8    |       8    |       0    |
|---------------------------------------------------------------------------|
| Non-releasable allocs |      12    |      25    |    2606 K  |    2606 K  |
|       from large pool |       1    |      15    |     661 K  |     661 K  |
|       from small pool |      11    |      16    |    1944 K  |    1944 K  |
|---------------------------------------------------------------------------|
| Oversize allocations  |       0    |       0    |       0    |       0    |
|---------------------------------------------------------------------------|
| Oversize GPU segments |       0    |       0    |       0    |       0    |
|===========================================================================|

loading the best model from: ./checkpoints/checkpoints-8/lra-image/learnable.model
Evaluation Results
Loss: 1.75114
Accuracy: 0.43318
