GPU list: [0, 1, 2, 3]
[
    {
        "learn_pos_emb": true,
        "tied_weights": false,
        "embedding_dim": 64,
        "transformer_dim": 64,
        "transformer_hidden_dim": 128,
        "head_dim": 32,
        "num_head": 2,
        "num_layers": 2,
        "vocab_size": 512,
        "max_seq_len": 1024,
        "dropout_prob": 0.1,
        "attention_dropout": 0.1,
        "pooling_mode": "MEAN",
        "num_classes": 14,
        "block_size": 32,
        "batch_size": 128,
        "density": 0.04,
        "mixed_precision": true,
        "random_seed": 8,
        "task": "lra-nature"
    },
    {
        "batch_size": 512,
        "learning_rate": 0.003,
        "warmup": 800,
        "lr_decay": "linear",
        "weight_decay": 0,
        "eval_frequency": 500,
        "num_train_steps": 10000,
        "num_init_steps": 3000,
        "num_eval_steps": 300,
        "num_dense_train_steps": 1000,
        "patience": 10,
        "attn_loss_scale": 0.01
    }
]
attn compile
attn compile
DataParallel(
  (module): ModelForSC(
    (model): Model(
      (embeddings): Embeddings(
        (word_embeddings): Embedding(512, 64)
        (position_embeddings): Embedding(1024, 64)
        (dropout): Dropout(p=0.1, inplace=False)
      )
      (transformer_0): TransformerLayer(
        (norm1): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
        (mha): Attention(
          (W_q): Linear(in_features=64, out_features=64, bias=True)
          (W_k): Linear(in_features=64, out_features=64, bias=True)
          (W_v): Linear(in_features=64, out_features=64, bias=True)
          (avg_pool): AvgPool2d(kernel_size=32, stride=32, padding=0)
          (MSEloss): MSELoss()
          (attn): CUDAAttention()
          (ff): Linear(in_features=64, out_features=64, bias=True)
        )
        (dropout1): Dropout(p=0.1, inplace=False)
        (norm2): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
        (mlpblock): Sequential(
          (0): Linear(in_features=64, out_features=128, bias=True)
          (1): GELU(approximate='none')
          (2): Dropout(p=0.1, inplace=False)
          (3): Linear(in_features=128, out_features=64, bias=True)
          (4): Dropout(p=0.1, inplace=False)
        )
      )
      (transformer_1): TransformerLayer(
        (norm1): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
        (mha): Attention(
          (W_q): Linear(in_features=64, out_features=64, bias=True)
          (W_k): Linear(in_features=64, out_features=64, bias=True)
          (W_v): Linear(in_features=64, out_features=64, bias=True)
          (avg_pool): AvgPool2d(kernel_size=32, stride=32, padding=0)
          (MSEloss): MSELoss()
          (attn): CUDAAttention()
          (ff): Linear(in_features=64, out_features=64, bias=True)
        )
        (dropout1): Dropout(p=0.1, inplace=False)
        (norm2): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
        (mlpblock): Sequential(
          (0): Linear(in_features=64, out_features=128, bias=True)
          (1): GELU(approximate='none')
          (2): Dropout(p=0.1, inplace=False)
          (3): Linear(in_features=128, out_features=64, bias=True)
          (4): Dropout(p=0.1, inplace=False)
        )
      )
      (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
    )
    (seq_classifer): SCHead(
      (mlpblock): Sequential(
        (0): Linear(in_features=64, out_features=128, bias=True)
        (1): ReLU()
        (2): Linear(in_features=128, out_features=14, bias=True)
      )
    )
  )
)
parameter_size: [torch.Size([512, 64]), torch.Size([1024, 64]), torch.Size([64]), torch.Size([64]), torch.Size([32, 32]), torch.Size([64, 64]), torch.Size([64]), torch.Size([64, 64]), torch.Size([64]), torch.Size([64, 64]), torch.Size([64]), torch.Size([64, 64]), torch.Size([64]), torch.Size([64]), torch.Size([64]), torch.Size([128, 64]), torch.Size([128]), torch.Size([64, 128]), torch.Size([64]), torch.Size([64]), torch.Size([64]), torch.Size([32, 32]), torch.Size([64, 64]), torch.Size([64]), torch.Size([64, 64]), torch.Size([64]), torch.Size([64, 64]), torch.Size([64]), torch.Size([64, 64]), torch.Size([64]), torch.Size([64]), torch.Size([64]), torch.Size([128, 64]), torch.Size([128]), torch.Size([64, 128]), torch.Size([64]), torch.Size([64]), torch.Size([64]), torch.Size([128, 64]), torch.Size([128]), torch.Size([14, 128]), torch.Size([14])]
num_parameter: 177550
Loaded ../Skyformer/data/lra_processed/lra-nature.train.pickle... size=437513
Loaded ../Skyformer/data/lra_processed/lra-nature.dev.pickle... size=24426
Loaded ../Skyformer/data/lra_processed/lra-nature.test.pickle... size=24426
accumu_steps=1
module.model.transformer_0.mha.pattern saved
module.model.transformer_1.mha.pattern saved
./pickle/lra-nature/module.model.transformer_0.mha.pattern.pickle
tensor([ 726,  396, 1023,  759,  363,  495,  957,  825,  297,  693,   99,  594,
         990,  462,  627,  924,  733,  950,  198,  429,  330,  503,  751,  528,
         132,  767, 1015,   33,  364,  395,  727,  758,  729,  822,  118,  707,
         415, 1004,  264,  660], device='cuda:0')
tensor(40, device='cuda:0')
block_attn compile
./pickle/lra-nature/module.model.transformer_1.mha.pattern.pickle
tensor([726, 495, 957,   0, 198, 594, 132, 693, 363, 429, 264, 330, 396, 759,
        462, 660, 990, 891, 528, 165, 792, 157, 932, 509, 943, 627, 924, 825,
          8, 256,  22, 704, 733, 950,  99, 297, 221, 934, 413, 940],
       device='cuda:0')
tensor(40, device='cuda:0')
block_attn compile
total pattern searching time (s): 0.005396604537963867
[]
best model saved: step =  499 dev accu =  tensor(0.4458, device='cuda:0')

Validation Results
Global Steps: 499
Valid Loss: 1.72966
Valid Accuracy: 0.44577
time stamp: 192.4993031024933
[]

Validation Results
Global Steps: 999
Valid Loss: 1.71972
Valid Accuracy: 0.44215
time stamp: 233.74452185630798
[]
best model saved: step =  1499 dev accu =  tensor(0.4597, device='cuda:0')

Validation Results
Global Steps: 1499
Valid Loss: 1.66992
Valid Accuracy: 0.45973
time stamp: 274.1668996810913
[]
best model saved: step =  1999 dev accu =  tensor(0.4859, device='cuda:0')

Validation Results
Global Steps: 1999
Valid Loss: 1.61458
Valid Accuracy: 0.48592
time stamp: 314.85439586639404
[]
best model saved: step =  2499 dev accu =  tensor(0.4892, device='cuda:0')

Validation Results
Global Steps: 2499
Valid Loss: 1.58557
Valid Accuracy: 0.48919
time stamp: 355.9499001502991
[]
best model saved: step =  2999 dev accu =  tensor(0.5051, device='cuda:0')

Validation Results
Global Steps: 2999
Valid Loss: 1.56346
Valid Accuracy: 0.50507
time stamp: 396.9115631580353
[]

Validation Results
Global Steps: 3499
Valid Loss: 1.59721
Valid Accuracy: 0.49627
time stamp: 437.8105833530426
[]
best model saved: step =  3999 dev accu =  tensor(0.5083, device='cuda:0')

Validation Results
Global Steps: 3999
Valid Loss: 1.56146
Valid Accuracy: 0.50833
time stamp: 478.8207674026489
[]

Validation Results
Global Steps: 4499
Valid Loss: 1.58812
Valid Accuracy: 0.49985
time stamp: 519.5496070384979
[]

Validation Results
Global Steps: 4999
Valid Loss: 1.57121
Valid Accuracy: 0.50035
time stamp: 560.487095117569
[]
best model saved: step =  5499 dev accu =  tensor(0.5137, device='cuda:0')

Validation Results
Global Steps: 5499
Valid Loss: 1.54524
Valid Accuracy: 0.51372
time stamp: 601.2705523967743
[]

Validation Results
Global Steps: 5999
Valid Loss: 1.53620
Valid Accuracy: 0.51334
time stamp: 642.4622759819031
[]

Validation Results
Global Steps: 6499
Valid Loss: 1.53184
Valid Accuracy: 0.51167
time stamp: 683.5611257553101
[]
best model saved: step =  6999 dev accu =  tensor(0.5218, device='cuda:0')

Validation Results
Global Steps: 6999
Valid Loss: 1.52193
Valid Accuracy: 0.52184
time stamp: 724.4841930866241
[]

Validation Results
Global Steps: 7499
Valid Loss: 1.51638
Valid Accuracy: 0.51557
time stamp: 765.4555826187134
[]

Validation Results
Global Steps: 7999
Valid Loss: 1.53503
Valid Accuracy: 0.50980
time stamp: 806.4805927276611
[]

Validation Results
Global Steps: 8499
Valid Loss: 1.52227
Valid Accuracy: 0.51817
time stamp: 847.3369348049164
[]

Validation Results
Global Steps: 8999
Valid Loss: 1.58282
Valid Accuracy: 0.49029
time stamp: 888.7271192073822
[]
best model saved: step =  9499 dev accu =  tensor(0.5255, device='cuda:0')

Validation Results
Global Steps: 9499
Valid Loss: 1.50810
Valid Accuracy: 0.52548
time stamp: 930.0030941963196
[]

Validation Results
Global Steps: 9999
Valid Loss: 1.53778
Valid Accuracy: 0.51279
time stamp: 970.8872199058533
total training step (k): 10.0
total training time (s): 970.888058423996
total training time (ms): 171533.390625
peak memory usage (MB): 8036
allocated memory usage (MB): 61551395
|===========================================================================|
|                  PyTorch CUDA memory summary, device ID 0                 |
|---------------------------------------------------------------------------|
|            CUDA OOMs: 0            |        cudaMalloc retries: 0         |
|===========================================================================|
|        Metric         | Cur Usage  | Peak Usage | Tot Alloc  | Tot Freed  |
|---------------------------------------------------------------------------|
| Allocated memory      |   10389 KB |    8036 MB |   60108 GB |   60108 GB |
|       from large pool |    6144 KB |    8030 MB |   59618 GB |   59618 GB |
|       from small pool |    4245 KB |      15 MB |     490 GB |     490 GB |
|---------------------------------------------------------------------------|
| Active memory         |   10389 KB |    8036 MB |   60108 GB |   60108 GB |
|       from large pool |    6144 KB |    8030 MB |   59618 GB |   59618 GB |
|       from small pool |    4245 KB |      15 MB |     490 GB |     490 GB |
|---------------------------------------------------------------------------|
| GPU reserved memory   |    8614 MB |    8614 MB |    8614 MB |       0 B  |
|       from large pool |    8596 MB |    8596 MB |    8596 MB |       0 B  |
|       from small pool |      18 MB |      18 MB |      18 MB |       0 B  |
|---------------------------------------------------------------------------|
| Non-releasable memory |   12139 KB |    1109 MB |   52333 GB |   52333 GB |
|       from large pool |   10240 KB |    1106 MB |   51807 GB |   51807 GB |
|       from small pool |    1899 KB |       4 MB |     526 GB |     526 GB |
|---------------------------------------------------------------------------|
| Allocations           |     228    |     574    |    6178 K  |    6178 K  |
|       from large pool |       2    |      49    |    2145 K  |    2145 K  |
|       from small pool |     226    |     565    |    4033 K  |    4032 K  |
|---------------------------------------------------------------------------|
| Active allocs         |     228    |     574    |    6178 K  |    6178 K  |
|       from large pool |       2    |      49    |    2145 K  |    2145 K  |
|       from small pool |     226    |     565    |    4033 K  |    4032 K  |
|---------------------------------------------------------------------------|
| GPU reserved segments |      31    |      31    |      31    |       0    |
|       from large pool |      22    |      22    |      22    |       0    |
|       from small pool |       9    |       9    |       9    |       0    |
|---------------------------------------------------------------------------|
| Non-releasable allocs |      11    |      25    |    2870 K  |    2870 K  |
|       from large pool |       2    |      15    |     867 K  |     867 K  |
|       from small pool |       9    |      15    |    2002 K  |    2002 K  |
|---------------------------------------------------------------------------|
| Oversize allocations  |       0    |       0    |       0    |       0    |
|---------------------------------------------------------------------------|
| Oversize GPU segments |       0    |       0    |       0    |       0    |
|===========================================================================|

loading the best model from: ./checkpoints/checkpoints-8/lra-nature/learnable.model
Evaluation Results
Loss: 1.50777
Accuracy: 0.52502
