GPU list: [0, 1, 2, 3]
[
    {
        "learn_pos_emb": true,
        "tied_weights": false,
        "embedding_dim": 64,
        "transformer_dim": 64,
        "transformer_hidden_dim": 128,
        "head_dim": 32,
        "num_head": 2,
        "num_layers": 2,
        "vocab_size": 256,
        "max_seq_len": 1024,
        "dropout_prob": 0.1,
        "attention_dropout": 0.1,
        "pooling_mode": "MEAN",
        "num_classes": 10,
        "block_size": 32,
        "batch_size": 128,
        "density": 0.05,
        "mixed_precision": true,
        "random_seed": 9,
        "task": "lra-image"
    },
    {
        "batch_size": 512,
        "learning_rate": 0.002,
        "warmup": 175,
        "lr_decay": "linear",
        "weight_decay": 0,
        "eval_frequency": 500,
        "num_train_steps": 10000,
        "num_init_steps": 0,
        "num_eval_steps": 20,
        "num_dense_train_steps": 1000,
        "attn_loss_scale": 0.01
    }
]
attn compile
attn compile
DataParallel(
  (module): ModelForSC(
    (model): Model(
      (embeddings): Embeddings(
        (word_embeddings): Embedding(256, 64)
        (position_embeddings): Embedding(1024, 64)
        (dropout): Dropout(p=0.1, inplace=False)
      )
      (transformer_0): TransformerLayer(
        (norm1): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
        (mha): Attention(
          (W_q): Linear(in_features=64, out_features=64, bias=True)
          (W_k): Linear(in_features=64, out_features=64, bias=True)
          (W_v): Linear(in_features=64, out_features=64, bias=True)
          (avg_pool): AvgPool2d(kernel_size=32, stride=32, padding=0)
          (MSEloss): MSELoss()
          (attn): CUDAAttention()
          (ff): Linear(in_features=64, out_features=64, bias=True)
        )
        (dropout1): Dropout(p=0.1, inplace=False)
        (norm2): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
        (mlpblock): Sequential(
          (0): Linear(in_features=64, out_features=128, bias=True)
          (1): GELU(approximate='none')
          (2): Dropout(p=0.1, inplace=False)
          (3): Linear(in_features=128, out_features=64, bias=True)
          (4): Dropout(p=0.1, inplace=False)
        )
      )
      (transformer_1): TransformerLayer(
        (norm1): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
        (mha): Attention(
          (W_q): Linear(in_features=64, out_features=64, bias=True)
          (W_k): Linear(in_features=64, out_features=64, bias=True)
          (W_v): Linear(in_features=64, out_features=64, bias=True)
          (avg_pool): AvgPool2d(kernel_size=32, stride=32, padding=0)
          (MSEloss): MSELoss()
          (attn): CUDAAttention()
          (ff): Linear(in_features=64, out_features=64, bias=True)
        )
        (dropout1): Dropout(p=0.1, inplace=False)
        (norm2): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
        (mlpblock): Sequential(
          (0): Linear(in_features=64, out_features=128, bias=True)
          (1): GELU(approximate='none')
          (2): Dropout(p=0.1, inplace=False)
          (3): Linear(in_features=128, out_features=64, bias=True)
          (4): Dropout(p=0.1, inplace=False)
        )
      )
      (norm): LayerNorm((64,), eps=1e-05, elementwise_affine=True)
    )
    (seq_classifer): SCHead(
      (mlpblock): Sequential(
        (0): Linear(in_features=64, out_features=128, bias=True)
        (1): ReLU()
        (2): Linear(in_features=128, out_features=10, bias=True)
      )
    )
  )
)
parameter_size: [torch.Size([256, 64]), torch.Size([1024, 64]), torch.Size([64]), torch.Size([64]), torch.Size([32, 32]), torch.Size([64, 64]), torch.Size([64]), torch.Size([64, 64]), torch.Size([64]), torch.Size([64, 64]), torch.Size([64]), torch.Size([64, 64]), torch.Size([64]), torch.Size([64]), torch.Size([64]), torch.Size([128, 64]), torch.Size([128]), torch.Size([64, 128]), torch.Size([64]), torch.Size([64]), torch.Size([64]), torch.Size([32, 32]), torch.Size([64, 64]), torch.Size([64]), torch.Size([64, 64]), torch.Size([64]), torch.Size([64, 64]), torch.Size([64]), torch.Size([64, 64]), torch.Size([64]), torch.Size([64]), torch.Size([64]), torch.Size([128, 64]), torch.Size([128]), torch.Size([64, 128]), torch.Size([64]), torch.Size([64]), torch.Size([64]), torch.Size([128, 64]), torch.Size([128]), torch.Size([10, 128]), torch.Size([10])]
num_parameter: 160650
Loaded ../Skyformer/data/lra_processed/lra-image.train.pickle... size=45000
Loaded ../Skyformer/data/lra_processed/lra-image.dev.pickle... size=5000
Loaded ../Skyformer/data/lra_processed/lra-image.test.pickle... size=10000
accumu_steps=1
module.model.transformer_0.mha.pattern saved
module.model.transformer_1.mha.pattern saved
./pickle/lra-image/module.model.transformer_0.mha.pattern.pickle
tensor([ 429,   33,  726,  924,  396, 1023,  693,  495,  594,  198,  330,  264,
         462,  627,    0,  792,  990,  660,  132,  957,  231,  165,   99,   47,
         481,  561,  891,   66,  528,  437,  685,  297,   45,  417,  434,  589,
         363,  447, 1005,  223,  998,  466,  590,   13,  416,  598,  722,  436,
         653,   63,  993], device='cuda:0')
tensor(51, device='cuda:0')
block_attn compile
./pickle/lra-image/module.model.transformer_1.mha.pattern.pickle
tensor([   0, 1023,  198,  396,  528,  297,  495,  693,  165,  264,  726,  891,
         627,  660,  231,  330,  132,  924,  858,   33,   66,  957,  594,  792,
         415, 1004,  561,  825,   99,  276,  648,  990,  223,  998,   31,  992,
         462,  759,   63,  993,  363,  383, 1003,   24,  768,   21,  672,  336,
         522,  496,  527], device='cuda:0')
tensor(51, device='cuda:0')
block_attn compile
total pattern searching time (s): 0.005415439605712891
[]
best model saved: step =  499 dev accu =  tensor(0.3701, device='cuda:0')

Validation Results
Global Steps: 499
Valid Loss: 1.75965
Valid Accuracy: 0.37012
time stamp: 122.27807307243347
[]
best model saved: step =  999 dev accu =  tensor(0.4065, device='cuda:0')

Validation Results
Global Steps: 999
Valid Loss: 1.69334
Valid Accuracy: 0.40654
time stamp: 157.48555874824524
[]
best model saved: step =  1499 dev accu =  tensor(0.4130, device='cuda:0')

Validation Results
Global Steps: 1499
Valid Loss: 1.68077
Valid Accuracy: 0.41299
time stamp: 193.07943296432495
[]
best model saved: step =  1999 dev accu =  tensor(0.4298, device='cuda:0')

Validation Results
Global Steps: 1999
Valid Loss: 1.68066
Valid Accuracy: 0.42979
time stamp: 229.16421699523926
[]

Validation Results
Global Steps: 2499
Valid Loss: 1.76178
Valid Accuracy: 0.41563
time stamp: 265.04714369773865
[]

Validation Results
Global Steps: 2999
Valid Loss: 1.74422
Valid Accuracy: 0.42871
time stamp: 300.790043592453
[]

Validation Results
Global Steps: 3499
Valid Loss: 1.78555
Valid Accuracy: 0.41182
time stamp: 336.40114760398865
[]

Validation Results
Global Steps: 3999
Valid Loss: 1.81570
Valid Accuracy: 0.42764
time stamp: 372.1071743965149
[]

Validation Results
Global Steps: 4499
Valid Loss: 1.86875
Valid Accuracy: 0.41797
time stamp: 407.7863540649414
[]

Validation Results
Global Steps: 4999
Valid Loss: 1.89589
Valid Accuracy: 0.40713
time stamp: 443.3331232070923
[]
best model saved: step =  5499 dev accu =  tensor(0.4326, device='cuda:0')

Validation Results
Global Steps: 5499
Valid Loss: 1.88442
Valid Accuracy: 0.43262
time stamp: 479.06417179107666
[]

Validation Results
Global Steps: 5999
Valid Loss: 1.97945
Valid Accuracy: 0.41475
time stamp: 514.5858764648438
[]

Validation Results
Global Steps: 6499
Valid Loss: 1.93673
Valid Accuracy: 0.41963
time stamp: 550.4659662246704
[]

Validation Results
Global Steps: 6999
Valid Loss: 2.08058
Valid Accuracy: 0.40449
time stamp: 586.1523361206055
[]

Validation Results
Global Steps: 7499
Valid Loss: 2.01599
Valid Accuracy: 0.41963
time stamp: 621.5870523452759
[]

Validation Results
Global Steps: 7999
Valid Loss: 2.10481
Valid Accuracy: 0.40576
time stamp: 657.2251403331757
[]

Validation Results
Global Steps: 8499
Valid Loss: 2.12648
Valid Accuracy: 0.40713
time stamp: 692.9416251182556
[]

Validation Results
Global Steps: 8999
Valid Loss: 2.07633
Valid Accuracy: 0.41309
time stamp: 728.6593117713928
[]

Validation Results
Global Steps: 9499
Valid Loss: 2.08872
Valid Accuracy: 0.41904
time stamp: 764.1032581329346
[]

Validation Results
Global Steps: 9999
Valid Loss: 2.15664
Valid Accuracy: 0.41436
time stamp: 799.9813866615295
total training step (k): 10.0
total training time (s): 799.9820635318756
total training time (ms): 12991.629211425781
peak memory usage (MB): 8036
allocated memory usage (MB): 50332873
|===========================================================================|
|                  PyTorch CUDA memory summary, device ID 0                 |
|---------------------------------------------------------------------------|
|            CUDA OOMs: 0            |        cudaMalloc retries: 0         |
|===========================================================================|
|        Metric         | Cur Usage  | Peak Usage | Tot Alloc  | Tot Freed  |
|---------------------------------------------------------------------------|
| Allocated memory      |    9993 KB |    8036 MB |   49153 GB |   49153 GB |
|       from large pool |    6144 KB |    8030 MB |   48787 GB |   48787 GB |
|       from small pool |    3849 KB |      15 MB |     365 GB |     365 GB |
|---------------------------------------------------------------------------|
| Active memory         |    9993 KB |    8036 MB |   49153 GB |   49153 GB |
|       from large pool |    6144 KB |    8030 MB |   48787 GB |   48787 GB |
|       from small pool |    3849 KB |      15 MB |     365 GB |     365 GB |
|---------------------------------------------------------------------------|
| GPU reserved memory   |    8612 MB |    8612 MB |    8612 MB |       0 B  |
|       from large pool |    8596 MB |    8596 MB |    8596 MB |       0 B  |
|       from small pool |      16 MB |      16 MB |      16 MB |       0 B  |
|---------------------------------------------------------------------------|
| Non-releasable memory |   10487 KB |    1109 MB |   40677 GB |   40677 GB |
|       from large pool |   10240 KB |    1106 MB |   40225 GB |   40225 GB |
|       from small pool |     247 KB |       4 MB |     452 GB |     452 GB |
|---------------------------------------------------------------------------|
| Allocations           |     228    |     304    |    5153 K  |    5153 K  |
|       from large pool |       2    |      49    |    1786 K  |    1786 K  |
|       from small pool |     226    |     285    |    3366 K  |    3366 K  |
|---------------------------------------------------------------------------|
| Active allocs         |     228    |     304    |    5153 K  |    5153 K  |
|       from large pool |       2    |      49    |    1786 K  |    1786 K  |
|       from small pool |     226    |     285    |    3366 K  |    3366 K  |
|---------------------------------------------------------------------------|
| GPU reserved segments |      30    |      30    |      30    |       0    |
|       from large pool |      22    |      22    |      22    |       0    |
|       from small pool |       8    |       8    |       8    |       0    |
|---------------------------------------------------------------------------|
| Non-releasable allocs |      10    |      24    |    2594 K  |    2594 K  |
|       from large pool |       2    |      15    |     661 K  |     661 K  |
|       from small pool |       8    |      15    |    1933 K  |    1933 K  |
|---------------------------------------------------------------------------|
| Oversize allocations  |       0    |       0    |       0    |       0    |
|---------------------------------------------------------------------------|
| Oversize GPU segments |       0    |       0    |       0    |       0    |
|===========================================================================|

loading the best model from: ./checkpoints/checkpoints-9/lra-image/learnable.model
Evaluation Results
Loss: 1.88950
Accuracy: 0.42455
